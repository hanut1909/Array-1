// Time Complexity : O(n)
// Space Complexity : O(n)
// Did this code successfully run on Leetcode : yes
// Three line explanation of solution in plain english

// Your code here along with comments explaining your approach

class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        left=0
        top=0
        right=len(matrix[0])-1
        bottom=len(matrix)-1
        result=[]
        k=0
        while(left<=right and top<=bottom):
            #right
            if(k==0):
                for j in range(left,right+1):
                    result.append(matrix[top][j])
                top=top+1
                k=1
                
            #down
            elif(k==1):
                for i in range(top,bottom+1):
                    result.append(matrix[i][right])
                right=right-1
                k+=1
            
            #left
            elif(k==2):
                for j in range(right,left-1,-1):
                    result.append(matrix[bottom][j])
                bottom=bottom-1
                k+=1
        
            #up
            elif(k==3):
                for i in range(bottom,top-1,-1):
                    result.append(matrix[i][left])
                left=left+1
                k=0
        
        return result
